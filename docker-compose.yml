version: '3.8'

services:

  # Client 1 Biometric API Service
  client1-api:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: client1-biometric-api
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app/api
      - ./data/partitioned/client1:/app/data
      - ./models:/app/models
      - ./cache:/app/cache
      - ./logs:/app/logs
      - ./database/client1.db:/app/database/client1.db
      - pip-cache:/root/.cache/pip
    environment:
      - PYTHONPATH=/app
      - TORCH_HOME=/app/cache/torch
      - NVIDIA_VISIBLE_DEVICES=all
      - MODEL_PATH=/app/models/best_client1_pretrained_model.pth
      - CLIENT_ID=client1
      - DATABASE_URL=sqlite:////app/database/client1.db
      - JWT_SECRET=your-secret-key-client1
      - RATE_LIMIT_AUTH=5
      - RATE_LIMIT_DEFAULT=10
      - MAX_WORKERS=1
      - LOG_LEVEL=INFO
      - ENABLE_DP=true
      - MAX_DP_EPSILON=100.0
      - DP_DELTA=1e-5
      - DP_NOISE_MULTIPLIER=0.2
      - DP_MAX_GRAD_NORM=5.0
      - CUDA_VISIBLE_DEVICES=0
      - TORCH_USE_CUDA_DSA=1
      - CUDA_LAUNCH_BLOCKING=1
      - RELOAD=true
      - EMOTION_API_URL=http://emotion-api:8080
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    mem_limit: 4g
    restart: unless-stopped
    networks:
      - biometric-net

  # Emotion Analysis API Service
  emotion-api:
    build:
      context: ./emo-api
      dockerfile: Dockerfile
    container_name: emotion-api
    ports:
      - "1236:8080"
    volumes:
      - ./emo-api/model.pth:/app/model.pth
    environment:
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - biometric-net

  # # Client 2 Biometric API Service
  # client2-api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.client
  #     args:
  #       BASE_IMAGE: pytorch/pytorch:2.7.1-cuda11.8-cudnn9-runtime
  #   container_name: client2-biometric-api
  #   ports:
  #     - "8001:8000"
  #   volumes:
  #     - ./data/partitioned/client2:/app/data
  #     - ./models:/app/models
  #     - ./cache:/app/cache
  #     - ./logs:/app/logs
  #     - ./data/client2.db:/app/data/biometric.db:rw
  #     - pip-cache:/root/.cache/pip
  #     - ./api:/app/api
  #   environment:
  #     - PYTHONPATH=/app
  #     - TORCH_HOME=/app/cache/torch
  #     - NVIDIA_VISIBLE_DEVICES=all
  #     - MODEL_PATH=/app/models/best_client2_pretrained_model.pth
  #     - CLIENT_ID=client2
  #     - DATABASE_URL=sqlite:///data/biometric.db
  #     - JWT_SECRET=your-secret-key-client2
  #     - RATE_LIMIT_AUTH=5
  #     - RATE_LIMIT_DEFAULT=10
  #     - MAX_WORKERS=1
  #     - LOG_LEVEL=INFO
  #     - ENABLE_DP=true
  #     - MAX_DP_EPSILON=100.0
  #     - DP_DELTA=1e-5
  #     - DP_NOISE_MULTIPLIER=0.2
  #     - DP_MAX_GRAD_NORM=5.0
  #     - CUDA_VISIBLE_DEVICES=0
  #     - TORCH_USE_CUDA_DSA=1
  #     - CUDA_LAUNCH_BLOCKING=1
  #     - RELOAD=true
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   mem_limit: 4g
  #   restart: unless-stopped
  #   networks:
  #     - biometric-net
  #   command: ["python", "-m", "uvicorn", "api.src.client_api:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--reload-dir", "/app/api"]

  # Training Server (not an API server)
  # training-server:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     args:
  #       BASE_IMAGE: pytorch/pytorch:2.7.1-cuda11.8-cudnn9-runtime
  #   container_name: biometric-training-server
  #   volumes:
  #     - ./data:/app/data
  #     - ./models:/app/models
  #     - ./cache:/app/cache
  #     - ./logs:/app/logs
  #   environment:
  #     - PYTHONPATH=/app
  #     - TORCH_HOME=/app/cache/torch
  #     - NVIDIA_VISIBLE_DEVICES=all
  #     - MODEL_PATH=/app/models/pretrained_model.pth
  #     - MAX_WORKERS=4
  #     - LOG_LEVEL=INFO
  #     - ENABLE_DP=true
  #     - MAX_DP_EPSILON=100.0
  #     - DP_DELTA=1e-5
  #     - DP_NOISE_MULTIPLIER=0.2
  #     - DP_MAX_GRAD_NORM=5.0
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   mem_limit: 8g
  #   restart: unless-stopped
  #   networks:
  #     - biometric-net
  #   command: python -m improved_privacy_training

networks:
  biometric-net:
    driver: bridge

volumes:
  biometric_cache:
    driver: local
  biometric_logs:
    driver: local
  pip-cache:
    name: facial-reg-pip-cache
  